@page
@model SignalRAssignment.Pages_Order.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Order Details</h1>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.OrderDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.OrderDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.RequiredDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.RequiredDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShippedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShippedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Freight)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Freight)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.ShipAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.ShipAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Customer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Customer.CustomerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Customer.ContactName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Customer.ContactName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Order.Customer.Phone)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Order.Customer.Phone)
        </dd>
    </dl>

    <h4>Order Details</h4>
    <hr />
    <table class="table">
        <thead>
            <tr>
                <th>
                    Product Name
                </th>
                <th>
                    Quantity
                </th>
                 <th>
                    Unit Price
                </th>
                <th>
                    Total
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.OrderDetail)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @CaculateTotal(item.Quantity,item.UnitPrice)
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div class="text-end">
        <h5>Total: @(Math.Round(Total, 2))</h5>
        <h5>Total with freight: @(Math.Round(Total + Model.Order.Freight, 2))</h5>
    </div>
</div>
<div>
    <a asp-page="./Index">Back to List</a>
</div>

@functions {
    public Double Total { get; set; }
    public double CaculateTotal(int quantity, double unitPrice)
    {
        Total += unitPrice * quantity;
        return unitPrice * quantity;
    }
   
}